Questions : 

type : STRING
question : STRING
propositions : [('A',''),('B',''),('C','')('D','')]
image : STRING

Modele propositions 

Question simple :

<div class="grid grid-cols-2 text-center gap-x-4 gap-y-32 mt-14">
      <p class="bg-purple-600 bg-opacity-50 proposition">
        <span class="text-xl font-black">A</span> - Marocain
      </p>
      <p class="bg-purple-600 bg-opacity-50 proposition">
        <span class="text-xl font-black">A</span> - Marocain
      </p>
      <p class="bg-purple-600 bg-opacity-50 proposition">
        <span class="text-xl font-black">A</span> - Marocain
      </p>
      <p class="bg-purple-600 bg-opacity-50 proposition">
        <span class="text-xl font-black">A</span> - Marocain
      </p>
</div>


Réponses : 

Deux tableaux : reponse_utilisateur qui contient les réponses de l'utilisateur, reponse qui contient les réponses des questions posées

Si (longueur(reponse_utilisateur) === reponse.length) alors l'utilisateur a déjà cliqué sur une proposition, on remplace alors 
la dernière réponse donnée par la nouvelle proposition qu'il a cliqué
sinon tout va bien on push dans le tableau

=> Si (longueur(reponse_utilisateur) === reponse.length) alors reponse_utilisateur[reponse_utilisateur.length-1] = reponse cliquée
sinon reponse_utilisateur.push(reponse cliquée)

Si l'utilisateur ne met pas de reponse il faut mettre une valeur à null

Gérer la fin :

Choisir le nbre de question à poser nbre_question

Puis incrémenter un nbre nbre_fin, tant que le nbre_fin est plus petit que nbre_question, on continue le questionnaire

quand le nbre_fin = nbre_question passer à la balise fin

Balise fin : props avec les tableaux reponse_utilisateur et reponse 